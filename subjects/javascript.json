{"subject_name":"javascript","chapters":[{"chapter_name":"Fetch Api\n","topics":[{"topic_name":"Introduction to fetch api","topic_html":"\n\n\n\n\n<div class=\"col-12 col-md-11 col-lg-9 rounded-2 mb-3 each-content-section px-1 px-md-4 py-2 pb-4\" data-eltype=\"section\"><h3 class=\"fw-600 fs-4 p-2 py-3 mb-2\" data-enableeditcontent=\"true\" data-eltype=\"title\"><span style=\"\" class=\"\"><span><i class=\"fa-solid fa-flame fs-icon i-icon ms-1\"></i>Introduction</span></span> to Javascript Fetch APi<br></h3><p class=\"fw-400 py-3 px-2 px-lg-3 mb-2 fs-6\" data-enableeditcontent=\"true\" data-eltype=\"text\">he Fetch API in JavaScript provides a modern way to fetch resources asynchronously across the network. It's designed to be more flexible and powerful than the older XMLHttpRequest (XHR) approach. Here's a concise introduction to using the Fetch API:</p><pre class=\"fs-6 copy-container code-container\">\n<p class=\"code-header p-2\">\n<span class=\"d-flex gap-2 f-p9\">\n  <span class=\"badge-point bg-danger\"></span>\n  <span class=\"badge-point bg-warning\"></span>\n  <span class=\"badge-point bg-success\"></span>\n</span>  \n<span data-enableeditcontent=\"true\" class=\"fw-500\">fetch.js</span>\n<i class=\"fa-solid fa-clone text-light copy-btn\" title=\"copy code\"></i>\n</p>\n<code class=\"language-livescript code-main copy-text fs-6 scroll scroll-both scroll-min scroll-on-hover hljs\" data-enableeditcontent=\"true\" data-highlighted=\"yes\">fetch(<span class=\"hljs-string\">'https://api.example.com/data'</span>)\n  .<span class=\"hljs-keyword\">then</span>(response =&gt; {\n    <span class=\"hljs-keyword\">if</span> (!response.ok) {\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">'Network response was not ok'</span>);\n    }\n    <span class=\"hljs-keyword\">return</span> response.json(); <span class=\"hljs-regexp\">// Parse the JSON data\n  })\n  .then(data =&gt; {\n    console.log(data); //</span> Process the <span class=\"hljs-built_in\">JSON</span> data\n  })\n  .<span class=\"hljs-keyword\">catch</span>(error =&gt; {\n    console.error(<span class=\"hljs-string\">'Fetch error:'</span>, error);\n  });\n\n</code></pre></div>"}]}]}