{"subject_name":"Php","chapters":[{"chapter_name":"Variable¬†","topics":[{"topic_name":"syntax","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 px-md-2 pb-4 content-section\" data-el=\"section\"><ul class=\"ul ps-4 ps-md-5 py-3 li-disk\" data-el=\"list-container\"> <li data-el=\"list\" class=\"\">This is list item1&nbsp;üë≥‚Äç‚ôÇÔ∏è‚úàüè¢üè¢<div class=\"copy-container my-2 p-2 bg-codelink border rounded-1 d-flex jc-between ai-center w-auto\" data-el=\"copy-container\">\n  <p class=\"copy-text flex-grow-1 text-truncate px-1 fnx-9\" data-el=\"copy-text\">copy me :-)</p>\n  <i class=\"copy-btn fa-solid fa-clone flex-shrink-0 c-pointer\"></i>\n</div>\n</li> <li data-el=\"list\" class=\"\">This is list item2</li>  <li data-el=\"list\" class=\"\">This is list item4<pre class=\"copy-container code-container\" data-el=\"code-container\">      <p class=\"code-header p-2\">\n      <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">javascript</span>\n      <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i>\n      </p>\n      <code class=\"language-javascript code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\">\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Note</span>{\n\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">username,token</span>){\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">username</span> = username\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">token</span> = token\n      <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/userRepo.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n      <span class=\"hljs-keyword\">let</span> {<span class=\"hljs-title class_\">UserRepo</span>} = mod\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserRepo</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">username</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">token</span>)\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">init</span>()       \n      })                  \n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>;\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>;\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>;\n    }\n\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>){\n      <span class=\"hljs-comment\">// click('#testBtn')</span>\n      <span class=\"hljs-comment\">// click('#openBtn')</span>\n      <span class=\"hljs-comment\">// get('#prompt-offcanvas-hide-btn').click()</span>\n    }\n    <span class=\"hljs-comment\">// end function</span>\n   <span class=\"hljs-title function_\">init</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">test</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showUserDetails</span>()      \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">checkEasyNoteRepo</span>()         \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showSubjectList</span>()               \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">newSubjectHandler</span>()               \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">newChpaterHandler</span>()         \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">modalContentHandler</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">initContentCreating</span>()                  \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleAllDeleteTrigger</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">renameHandler</span>()         \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">saveContentHandler</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleOthers</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleContentShare</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleReload</span>()\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleMediaManager</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>)\n      }\n\n      <span class=\"hljs-title function_\">handleMediaManager</span>(<span class=\"hljs-params\">noteObj</span>){\n         <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/mediaHandler.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">initMediaManager</span>(noteObj)\n      })              \n      }\n\n      <span class=\"hljs-title function_\">handleReload</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#page-relaod-btn'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n            <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#nav'</span>).<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'reload'</span>)\n            <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">''</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showSubjectList</span>()\n            <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">()=&gt;</span>{<span class=\"hljs-title function_\">elClass</span>(<span class=\"hljs-string\">'#nav'</span>,<span class=\"hljs-string\">'remove'</span>,<span class=\"hljs-string\">'reload'</span>)},<span class=\"hljs-number\">5000</span>)            \n         })\n      }\n\n   <span class=\"hljs-title function_\">handleContentShare</span>(<span class=\"hljs-params\"></span>){\n      <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#contentShareBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n         <span class=\"hljs-keyword\">let</span> currentContent = <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'#element-content-container'</span>).<span class=\"hljs-title function_\">trim</span>()\n         <span class=\"hljs-keyword\">if</span>(currentContent === <span class=\"hljs-string\">''</span>) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'creating link...'</span>,<span class=\"hljs-literal\">false</span>)\n         <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">createShareLink</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">username</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>,currentContent)\n         <span class=\"hljs-keyword\">if</span>(result.<span class=\"hljs-property\">status</span> === <span class=\"hljs-string\">'success'</span>){\n            <span class=\"hljs-keyword\">let</span> protocol = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">protocol</span>\n            <span class=\"hljs-keyword\">let</span> host  = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">host</span>\n            <span class=\"hljs-keyword\">let</span> contentURL = <span class=\"hljs-string\">`/page/content.php?content-id=<span class=\"hljs-subst\">${result.id}</span>`</span>\n            <span class=\"hljs-keyword\">let</span> link = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${protocol}</span>//<span class=\"hljs-subst\">${host}</span><span class=\"hljs-subst\">${contentURL}</span>`</span>\n            <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#content-share-link'</span>).<span class=\"hljs-property\">href</span> = link\n            <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#content-share-link'</span>).<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">'d-none'</span>)            \n            navigator.<span class=\"hljs-property\">clipboard</span>.<span class=\"hljs-title function_\">writeText</span>(link).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">()=&gt;</span>{\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'link copied to clipboard'</span>,<span class=\"hljs-string\">'circle-check'</span>)                     \n            })\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-literal\">true</span>)         \n         }<span class=\"hljs-keyword\">else</span>{\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'failed'</span>,<span class=\"hljs-literal\">false</span>)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(result.<span class=\"hljs-property\">message</span>,<span class=\"hljs-string\">'circle-error'</span>)            \n         }\n      })\n\n   }<span class=\"hljs-comment\">//end function </span>\n\n      <span class=\"hljs-title function_\">handleOthers</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#subjectReloadBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n            <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showSubjectList</span>()\n            <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">''</span>)\n         })\n      }\n\n      <span class=\"hljs-comment\">// start renameHandler</span>\n       <span class=\"hljs-title function_\">renameHandler</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-keyword\">const</span> topicRenameBtn = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#topicRenameBtn'</span>)\n         <span class=\"hljs-keyword\">const</span> topicTitleEl = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#modal-topic-title'</span>)\n         <span class=\"hljs-title function_\">trigger</span>(topicRenameBtn,<span class=\"hljs-function\">()=&gt;</span>{\n         <span class=\"hljs-keyword\">let</span> oldTitleName = <span class=\"hljs-title function_\">text</span>(topicTitleEl)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">autoEdit</span>(topicTitleEl,<span class=\"hljs-title function_\">async</span>(renamedValue)=&gt;{\n               <span class=\"hljs-keyword\">if</span>((renamedValue.<span class=\"hljs-title function_\">trim</span>() === <span class=\"hljs-string\">''</span>) || (ranamedValue === oldTitleName)){\n                  <span class=\"hljs-title function_\">text</span>(topicTitleEl,oldTitleName)\n                  <span class=\"hljs-keyword\">return</span> ;\n               }\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n                  eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>( <span class=\"hljs-function\"><span class=\"hljs-params\">eachTopic</span>=&gt;</span>{\n                     <span class=\"hljs-keyword\">if</span>(eachTopic.<span class=\"hljs-property\">topic_name</span> == oldTitleName){\n                        eachTopic.<span class=\"hljs-property\">topic_name</span> = renamedValue\n                     }\n                  })\n                  <span class=\"hljs-comment\">// end 2nd loop</span>\n               })\n               <span class=\"hljs-comment\">// end 1st loop</span>\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`updating ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)                                                \n            <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n            <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'updated'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n                   }<span class=\"hljs-keyword\">else</span>{\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to rename topic'</span>)\n                  <span class=\"hljs-title function_\">text</span>(topicTitleEl,oldTitleName)\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`remove if contains emoji`</span>,<span class=\"hljs-literal\">true</span>)                                                   \n               }\n            })\n            <span class=\"hljs-comment\">// end callback func</span>\n         })\n\n\n<span class=\"hljs-comment\">// start chapterRenaming</span>\n\n<span class=\"hljs-keyword\">const</span> chapterRenameBtn = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#chapterRenameBtn'</span>)\n<span class=\"hljs-title function_\">trigger</span>(chapterRenameBtn,<span class=\"hljs-function\">()=&gt;</span>{\n   <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>) <span class=\"hljs-keyword\">return</span> ;\n   <span class=\"hljs-keyword\">let</span>  oldTitle = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>\n   <span class=\"hljs-keyword\">let</span> allChpaterTitle = <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions .chapter-title'</span>)\n   <span class=\"hljs-keyword\">let</span> targetTitle;\n   allChpaterTitle.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachTitle</span>=&gt;</span>{\n      <span class=\"hljs-keyword\">if</span>(eachTitle.<span class=\"hljs-property\">innerText</span>.<span class=\"hljs-title function_\">trim</span>() === oldTitle.<span class=\"hljs-title function_\">trim</span>()){\n         targetTitle = eachTitle\n      }\n   })\n   <span class=\"hljs-keyword\">if</span>(!targetTitle) <span class=\"hljs-keyword\">return</span> ;\n   <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">autoEdit</span>(targetTitle,<span class=\"hljs-title function_\">async</span>(newTitle)=&gt;{\n      <span class=\"hljs-keyword\">if</span>((newTitle.<span class=\"hljs-title function_\">trim</span>() === <span class=\"hljs-string\">''</span>) || (newTitle === oldTitle)){\n         <span class=\"hljs-title function_\">text</span>(targetTitle,oldTitle)\n         <span class=\"hljs-keyword\">return</span> ;         \n      }\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n         <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">chapter_name</span> === oldTitle){\n            eachChapter.<span class=\"hljs-property\">chapter_name</span> = newTitle\n         }\n      })\n      <span class=\"hljs-comment\">// end chapters loop</span>\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`‚è≥ updating`</span>,<span class=\"hljs-literal\">false</span>)                                                \n            <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n            <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'updated'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n                   }<span class=\"hljs-keyword\">else</span>{\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed ‚ùå`</span>,<span class=\"hljs-literal\">false</span>)                                                                     \n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to renamed chapter'</span>)\n                  <span class=\"hljs-title function_\">text</span>(targetTitle,oldTitle)\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n                    <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">chapter_name</span> === newTitle){\n                       eachChapter.<span class=\"hljs-property\">chapter_name</span> = oldTitle\n                       }\n                  })                  \n               }\n   })\n   <span class=\"hljs-comment\">// end callback func</span>\n})<span class=\"hljs-comment\">// end trigger</span>\n<span class=\"hljs-comment\">// end chapterRenaming</span>\n\n\n<span class=\"hljs-comment\">// strat subjectRenaming</span>\n<span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#subjectRenameBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n   <span class=\"hljs-keyword\">let</span> targetSubject = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#leftsideBar-subject-list .sidebar-subjectBtn.active'</span>)\n   <span class=\"hljs-keyword\">if</span>(!targetSubject) <span class=\"hljs-keyword\">return</span> ;\n   <span class=\"hljs-keyword\">let</span> newTitle = <span class=\"hljs-title function_\">prompt</span>(<span class=\"hljs-string\">'new subject title'</span>)\n   <span class=\"hljs-keyword\">if</span>((!newTitle) || (newTitle === targetSubject.<span class=\"hljs-property\">innerText</span>)) <span class=\"hljs-keyword\">return</span> ;\n   newTitle = newTitle.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/[\\,.!#$%^'`\\/&amp;\\*\\[\\]|()+]/g</span>,<span class=\"hljs-string\">'-'</span>)\n   <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'...updating'</span>,<span class=\"hljs-literal\">false</span>)\n   <span class=\"hljs-keyword\">let</span> processResult = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">renameSubject</span>(newTitle,targetSubject.<span class=\"hljs-property\">innerText</span>)\n   <span class=\"hljs-keyword\">if</span>(!processResult){\n   <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'failed ‚ùå'</span>,<span class=\"hljs-literal\">false</span>)      \n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'something went wrong'</span>,<span class=\"hljs-string\">'circle-xmark'</span>)\n   }\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${targetSubject.innerText}</span> renamed to <span class=\"hljs-subst\">${newTitle}</span>`</span>,<span class=\"hljs-string\">'circle-check'</span>)   \n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showSubjectList</span>()\n    <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">''</span>)\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span> = <span class=\"hljs-literal\">undefined</span>;\n})\n<span class=\"hljs-comment\">// end subjectRenaming</span>\n\n\n}\n<span class=\"hljs-comment\">// end function renameHandler</span>\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">handleAllDeleteTrigger</span>(<span class=\"hljs-params\"></span>){\n\n<span class=\"hljs-comment\">// start subject deleteTrigger</span>\n      <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#subjectDltBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n         <span class=\"hljs-keyword\">let</span> allSubjectBtn = <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-string\">'#leftsideBar-subject-list .sidebar-subjectBtn'</span>)\n         <span class=\"hljs-keyword\">if</span>(allSubjectBtn.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> ;         \n         <span class=\"hljs-keyword\">let</span> selectedSubject = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#leftsideBar-subject-list .sidebar-subjectBtn.active'</span>)\n         <span class=\"hljs-keyword\">if</span>(!selectedSubject) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-keyword\">let</span> deleteConfirm = <span class=\"hljs-title function_\">confirm</span>(<span class=\"hljs-string\">`remove the subject ( <span class=\"hljs-subst\">${selectedSubject.innerText}</span> )`</span>)\n         <span class=\"hljs-keyword\">if</span>(!deleteConfirm) <span class=\"hljs-keyword\">return</span> ;         \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`removing sujbect <span class=\"hljs-subst\">${selectedSubject.innerText}</span> ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)\n         <span class=\"hljs-keyword\">let</span> processResult =  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">removeSubject</span>(selectedSubject.<span class=\"hljs-property\">innerText</span>)\n         <span class=\"hljs-keyword\">if</span>(processResult){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">`subject : <span class=\"hljs-subst\">${selectedSubject.innerText}</span> deleted`</span>,<span class=\"hljs-string\">'circle-check'</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updatePageAddress</span>(<span class=\"hljs-string\">'EasyNote'</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-literal\">false</span>) \n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span> === selectedSubject.<span class=\"hljs-property\">innerText</span>){\n               <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">''</span>)\n            }           \n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span> = <span class=\"hljs-literal\">undefined</span>  \n          selectedSubject.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'d-none'</span>)\n         }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'failed ‚ùå'</span>,<span class=\"hljs-literal\">false</span>) \n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">`request failed`</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)            \n         }\n      })\n<span class=\"hljs-comment\">// end subject deleteTrigger</span>\n\n<span class=\"hljs-comment\">//start chapter deleteTrigger</span>\n   <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#chapterDltBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n      <span class=\"hljs-keyword\">let</span> allchapter = <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions .accordion-item'</span>)\n      <span class=\"hljs-keyword\">if</span>((!allchapter) || (allchapter.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>)) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-keyword\">let</span> deleteConfirm = <span class=\"hljs-title function_\">confirm</span>(<span class=\"hljs-string\">`remove the chapter ( <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.currentChapter}</span> )`</span>)\n         <span class=\"hljs-keyword\">if</span>(!deleteConfirm) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">eachChapter,index</span>)=&gt;</span>{\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span> === eachChapter.<span class=\"hljs-property\">chapter_name</span>){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">splice</span>(index,<span class=\"hljs-number\">1</span>)\n            }\n         })\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span> = <span class=\"hljs-literal\">undefined</span>\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`removing...`</span>,<span class=\"hljs-literal\">false</span>)                                          \n         <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n            <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>,<span class=\"hljs-literal\">true</span>)                                 \n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'deleted'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n                   }<span class=\"hljs-keyword\">else</span>{\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to remove chapter'</span>)\n               }\n   })\n<span class=\"hljs-comment\">//end chapter deleteTrigger</span>\n\n<span class=\"hljs-comment\">// start topic deleteTrigger</span>\n<span class=\"hljs-keyword\">const</span> topicDltBtn = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#topicDltBtn'</span>)\n<span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#topicDltBtn'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n   <span class=\"hljs-keyword\">let</span> deleteConfirm = <span class=\"hljs-title function_\">confirm</span>(<span class=\"hljs-string\">`remove the topic ( <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.currentTopic}</span> )`</span>)\n   <span class=\"hljs-keyword\">if</span>(!deleteConfirm) <span class=\"hljs-keyword\">return</span> ;   \n   <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#openBtn'</span>).<span class=\"hljs-title function_\">click</span>()   \n   <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n      eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">eachTopic,idx</span>)=&gt;</span>{\n         <span class=\"hljs-keyword\">if</span>(eachTopic.<span class=\"hljs-property\">topic_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>){\n            eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">splice</span>(idx,<span class=\"hljs-number\">1</span>)\n         }\n      })\n   })\n   <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`removing...`</span>,<span class=\"hljs-literal\">false</span>)                                          \n   <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n   <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>,<span class=\"hljs-literal\">true</span>)                                 \n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'topic deleted'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)             \n      }<span class=\"hljs-keyword\">else</span>{\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed ‚ùå`</span>,<span class=\"hljs-literal\">false</span>)                                                      \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to removed topic'</span>)\n      }\n})\n<span class=\"hljs-comment\">// end topic deleteTrigger</span>\n\n   }\n<span class=\"hljs-comment\">// end function</span>\n\n   <span class=\"hljs-title function_\">updatePageAddress</span>(<span class=\"hljs-params\">title</span>){\n      <span class=\"hljs-keyword\">if</span>(!title) <span class=\"hljs-keyword\">return</span> ;\n      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = title\n   }\n\n      <span class=\"hljs-title function_\">saveContentHandler</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-keyword\">const</span> modalElementContainer = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#modal-content #element-content-container'</span>)\n         <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#contentSaveBtn'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`saving ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)            \n           <span class=\"hljs-keyword\">let</span> currentContentHtml = <span class=\"hljs-title function_\">html</span>(modalElementContainer).<span class=\"hljs-title function_\">trim</span>()\n           <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n            <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">chapter_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>){\n               eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">async</span> eachTopic=&gt;{\n                  <span class=\"hljs-keyword\">if</span>(eachTopic.<span class=\"hljs-property\">topic_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>){\n                     eachTopic.<span class=\"hljs-property\">topic_html</span> = currentContentHtml\n                  <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n                   <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n                     <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`saved`</span>,<span class=\"hljs-literal\">false</span>)                                 \n                     <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'saved'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n                     <span class=\"hljs-title function_\">attr</span>(modalElementContainer,<span class=\"hljs-string\">'data-has-new-content'</span>,<span class=\"hljs-string\">'false'</span>)\n                     <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n                   }<span class=\"hljs-keyword\">else</span>{\n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to save content'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)\n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed to save content ‚ùå`</span>,<span class=\"hljs-literal\">false</span>)                                                   \n                    }\n                  }<span class=\"hljs-comment\">//end topic logic</span>\n               })<span class=\"hljs-comment\">//end 2nd loop</span>\n            }<span class=\"hljs-comment\">//end chapter logic</span>\n           })<span class=\"hljs-comment\">// end first loop</span>\n         })<span class=\"hljs-comment\">// end saveBtnTrigger</span>\n      }<span class=\"hljs-comment\">// end function</span>\n\n\n\n\n      <span class=\"hljs-title function_\">modalContentHandler</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">const</span> modalContent = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#modal-content'</span>)\n        <span class=\"hljs-keyword\">const</span> modalElementContainer = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#modal-content #element-content-container'</span>)\n        <span class=\"hljs-title class_\">Trigger</span>(<span class=\"hljs-string\">'#modal-content'</span>,<span class=\"hljs-string\">'shown.bs.modal'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n         <span class=\"hljs-title function_\">attr</span>(modalElementContainer,<span class=\"hljs-string\">'data-has-new-content'</span>,<span class=\"hljs-string\">'false'</span>)\n         <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#modal-topic-title'</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>)\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updatePageAddress</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>)    \n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n         <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">chapter_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>){\n            eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachTopic</span>=&gt;</span>{\n               <span class=\"hljs-keyword\">if</span>(eachTopic.<span class=\"hljs-property\">topic_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>){\n                  <span class=\"hljs-keyword\">if</span>(!eachTopic.<span class=\"hljs-property\">topic_html</span>) <span class=\"hljs-keyword\">return</span> ;\n                  <span class=\"hljs-title function_\">html</span>(modalElementContainer,eachTopic.<span class=\"hljs-property\">topic_html</span>)\n                  <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/elRequireJs.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n                  mod.<span class=\"hljs-title function_\">initRequireJs</span>()\n                  })                              \n               }<span class=\"hljs-comment\">//end topic logic</span>\n            })<span class=\"hljs-comment\">//end topic loop</span>\n          }<span class=\"hljs-comment\">//end chapter logic</span>\n        })<span class=\"hljs-comment\">//end chapter loop</span>\n        })\n\n        <span class=\"hljs-title class_\">Trigger</span>(<span class=\"hljs-string\">'#modal-content'</span>,<span class=\"hljs-string\">'hidden.bs.modal'</span>,<span class=\"hljs-title function_\">async</span>()=&gt;{\n         <span class=\"hljs-keyword\">let</span> newContentInserted = <span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">'#element-content-container'</span>,<span class=\"hljs-string\">'data-has-new-content'</span>)\n         <span class=\"hljs-keyword\">if</span>(newContentInserted === <span class=\"hljs-string\">'true'</span>){\n            <span class=\"hljs-keyword\">let</span> autoSaveEnabled = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#auto-save-btn'</span>).<span class=\"hljs-property\">checked</span>\n            <span class=\"hljs-keyword\">if</span>(autoSaveEnabled){\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`saving ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)                                 \n                  <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n                   <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'saved'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n                  <span class=\"hljs-title function_\">attr</span>(modalElementContainer,<span class=\"hljs-string\">'data-has-new-content'</span>,<span class=\"hljs-string\">'false'</span>)\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n                   }<span class=\"hljs-keyword\">else</span>{\n                     <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to save content'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)\n                     <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed to save content ‚ùå`</span>,<span class=\"hljs-literal\">false</span>)                                                   \n                    }                \n            }<span class=\"hljs-keyword\">else</span>{<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'content was not saved'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)}\n         }<span class=\"hljs-comment\">//end new content inserted logic</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updatePageAddress</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)    \n           <span class=\"hljs-keyword\">let</span> currentContentHtml = <span class=\"hljs-title function_\">html</span>(modalElementContainer)\n           <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n            <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">chapter_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span>){\n               eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">async</span> eachTopic=&gt;{\n                  <span class=\"hljs-keyword\">if</span>(eachTopic.<span class=\"hljs-property\">topic_name</span> === <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span>){\n                     eachTopic.<span class=\"hljs-property\">topic_html</span> = currentContentHtml\n                     <span class=\"hljs-title function_\">html</span>(modalElementContainer,<span class=\"hljs-string\">''</span>)\n                     <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'#modal-topic-title'</span>,<span class=\"hljs-string\">''</span>)\n                  }<span class=\"hljs-comment\">//end topic logic</span>\n               })<span class=\"hljs-comment\">//end topic loop</span>\n            }<span class=\"hljs-comment\">//end chapter-lgic</span>\n           })<span class=\"hljs-comment\">//chapter loop</span>\n        })\n\n}\n<span class=\"hljs-comment\">// end function</span>\n\n\n\n\n   <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">newChpaterHandler</span>(<span class=\"hljs-params\"></span>){\n     <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#createNewChapterBtn'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n      <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>) <span class=\"hljs-keyword\">return</span> ;\n      <span class=\"hljs-keyword\">let</span> chapterAccordion = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>)\n      <span class=\"hljs-keyword\">let</span> newChapter = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">'div'</span>)\n      newChapter.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'accordion-item'</span>,<span class=\"hljs-string\">'each-chapter'</span>)\n      newChapter.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">`&lt;h2 class=\"accordion-header\"&gt;\n      &lt;button class=\"accordion-button collapsed ps-1\" type=\"button\" data-bs-toggle=\"collapse\" aria-expanded=\"false\"&gt;\n        &lt;span class=\"chapter-title text-truncate\"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/h2&gt;&lt;div class=\"accordion-collapse collapse\"&gt;&lt;div class=\"accordion-body box-bg\"&gt;&lt;header class=\"text-end mb-1\"&gt;&lt;i class=\"topic-addBtn fa-solid fa-plus fs-5 i-btn rounded-circle \"&gt;&lt;/i&gt;&lt;/header&gt;&lt;div class=\"topic-list\"&gt;&lt;/div&gt;&lt;/div&gt;`</span>\n      chapterAccordion.<span class=\"hljs-title function_\">appendChild</span>(newChapter)\n      <span class=\"hljs-keyword\">let</span> allChapterOfAccordion = <span class=\"hljs-title function_\">getAll</span>(chapterAccordion,<span class=\"hljs-string\">'.accordion-item'</span>)\n      <span class=\"hljs-keyword\">let</span> chapterTitle = allChapterOfAccordion[allChapterOfAccordion.<span class=\"hljs-property\">length</span>-<span class=\"hljs-number\">1</span>].<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">'.chapter-title'</span>)\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">autoEdit</span>(chapterTitle,<span class=\"hljs-keyword\">async</span> (chapterName)=&gt;{\n        <span class=\"hljs-keyword\">if</span>(!chapterName || chapterName.<span class=\"hljs-title function_\">trim</span>() === <span class=\"hljs-string\">''</span>){\n            <span class=\"hljs-title function_\">remove</span>(newChapter)\n            <span class=\"hljs-keyword\">return</span> ;\n        }\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`creating new chapter <span class=\"hljs-subst\">${chapterName}</span> ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)                              \n         <span class=\"hljs-keyword\">let</span> newChapterObj = {<span class=\"hljs-attr\">chapter_name</span>:chapterName,<span class=\"hljs-attr\">topics</span>:[]}\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">push</span>(newChapterObj)\n         <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n         <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'new chapter created'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n         }<span class=\"hljs-keyword\">else</span>{\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'failed ‚ùå '</span>,<span class=\"hljs-literal\">false</span>)            \n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to create new chapter'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)            \n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">pop</span>()\n            <span class=\"hljs-title function_\">remove</span>(newChapter)\n          }\n\n      })<span class=\"hljs-comment\">//end callback func</span>\n     })<span class=\"hljs-comment\">//end trigger</span>\n\n   }\n   <span class=\"hljs-comment\">// end func</span>\n\n\n\n\n   <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">showSubjectList</span>(<span class=\"hljs-params\"></span>){\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">'loading subject list ‚è≥'</span>,<span class=\"hljs-literal\">false</span>)\n      <span class=\"hljs-keyword\">const</span> subjectListContainer = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#leftsideBar-subject-list'</span>)      \n      subjectListContainer.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">'&lt;button class=\"btn w-100\" type=\"button\" disabled&gt;&lt;span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"&gt;&lt;/span&gt;&lt;/button&gt;'</span>\n      <span class=\"hljs-keyword\">let</span> subjectList =  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">getSubjectList</span>()\n      <span class=\"hljs-keyword\">if</span>(!subjectList){\n         <span class=\"hljs-title function_\">html</span>(subjectListContainer,<span class=\"hljs-string\">\"&lt;div class='p-2'&gt;create new subject here&lt;/div&gt;\"</span>)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`empty subject list`</span>,<span class=\"hljs-literal\">true</span>)                     \n         <span class=\"hljs-keyword\">return</span> ;\n      }\n      <span class=\"hljs-title function_\">html</span>(subjectListContainer,<span class=\"hljs-string\">''</span>)\n      subjectList.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachSubject</span>=&gt;</span>{\n         <span class=\"hljs-title function_\">html</span>(subjectListContainer,<span class=\"hljs-string\">`&lt;button class=\"sidebar-subjectBtn btn w-100 text-start box-hover overflow-hidden text-truncate\"&gt;&lt;span&gt;<span class=\"hljs-subst\">${eachSubject}</span>&lt;/span&gt;&lt;/button&gt;`</span>,<span class=\"hljs-literal\">true</span>)\n      })\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">''</span>,<span class=\"hljs-literal\">true</span>)\n      <span class=\"hljs-keyword\">let</span> allSubjectBtn = <span class=\"hljs-title function_\">getAll</span>(subjectListContainer,<span class=\"hljs-string\">'.sidebar-subjectBtn'</span>)\n      allSubjectBtn.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachBtn</span>=&gt;</span>{\n         <span class=\"hljs-title function_\">trigger</span>(eachBtn,<span class=\"hljs-function\">()=&gt;</span>{\n            allSubjectBtn.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachSubBtn</span>=&gt;</span>{\n               <span class=\"hljs-keyword\">if</span>(eachSubBtn.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'active'</span>)){\n                  eachSubBtn.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">'active'</span>)\n               }\n            })\n            eachBtn.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'active'</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updatePageAddress</span>(eachBtn.<span class=\"hljs-property\">innerText</span>)\n            <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#chapter-container .currentSubjectName'</span>,eachBtn.<span class=\"hljs-property\">innerText</span>)\n            <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">`&lt;button class=\"btn w-100\" type=\"button\" disabled&gt;&lt;span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"&gt;&lt;/span&gt;&lt;/button&gt;`</span>)\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(eachBtn.<span class=\"hljs-property\">innerText</span>)\n         })<span class=\"hljs-comment\">//end trigger</span>\n      })<span class=\"hljs-comment\">//end eachbtn loop</span>\n    }<span class=\"hljs-comment\">// end function</span>\n\n\n\n\n   <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-params\">subject_name</span>){\n\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`loading subject <span class=\"hljs-subst\">${subject_name}</span>  ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)      \n      <span class=\"hljs-keyword\">let</span> subObj =  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">getSubject</span>(subject_name)\n      <span class=\"hljs-keyword\">let</span> subjectContent;\n      <span class=\"hljs-keyword\">try</span>{\n          <span class=\"hljs-keyword\">let</span> decodedContent = <span class=\"hljs-title function_\">base64ToUtf8</span>(subObj.<span class=\"hljs-property\">content</span>)\n          subjectContent = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(decodedContent)\n      }<span class=\"hljs-keyword\">catch</span>(err){\n         <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err)\n         <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions'</span>,<span class=\"hljs-string\">''</span>)\n      }\n      <span class=\"hljs-keyword\">if</span>(!subjectContent){\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'corrupt file'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed ‚ùå `</span>,<span class=\"hljs-literal\">false</span>)               \n         <span class=\"hljs-keyword\">return</span> ;\n      }\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span> = subjectContent\n      <span class=\"hljs-keyword\">if</span>(subjectContent.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>){\n         <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-string\">`&lt;h4 class='text-center text-light'&gt;create new subject here&lt;/h4&gt;`</span>)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`no chapter found`</span>,<span class=\"hljs-literal\">true</span>)                                 \n         <span class=\"hljs-keyword\">return</span> ;\n      }\n      <span class=\"hljs-keyword\">let</span> allChapterHtml = <span class=\"hljs-string\">''</span>      \n      <span class=\"hljs-keyword\">let</span> chapterAccordion = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions'</span>)\n      subjectContent.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n         <span class=\"hljs-keyword\">let</span> chapterName = eachChapter.<span class=\"hljs-property\">chapter_name</span>\n         <span class=\"hljs-keyword\">let</span> topicHtml = <span class=\"hljs-string\">''</span>\n         <span class=\"hljs-keyword\">if</span>(eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-property\">length</span> &gt;= <span class=\"hljs-number\">1</span>){\n         eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachTopic</span>=&gt;</span>{\n            <span class=\"hljs-keyword\">if</span>(!eachTopic ) <span class=\"hljs-keyword\">return</span> ;\n            topicHtml +=<span class=\"hljs-string\">`&lt;button class=\"each-topic btn w-100 text-start d-block box-hover rounded-1 text-truncate\" data-bs-toggle = 'modal' data-bs-target='#modal-content' data-topic='<span class=\"hljs-subst\">${eachTopic.topic_name}</span>'&gt;<span class=\"hljs-subst\">${eachTopic.topic_name}</span>&lt;/button&gt;`</span>\n         })            \n         }\n         allChapterHtml += <span class=\"hljs-string\">`  &lt;div class=\"accordion-item each-chapter\"&gt;&lt;h2 class=\"accordion-header\"&gt;&lt;button class=\"accordion-button collapsed ps-1\" data-chapter='<span class=\"hljs-subst\">${chapterName}</span>' type=\"button\" data-bs-toggle=\"collapse\" aria-expanded=\"false\"&gt;&lt;span data-chapter='<span class=\"hljs-subst\">${chapterName}</span>' class=\"chapter-title text-truncate\"&gt;<span class=\"hljs-subst\">${chapterName}</span>&lt;/span&gt;&lt;/button&gt;&lt;/h2&gt;&lt;div class=\"accordion-collapse collapse\"&gt;&lt;div class=\"accordion-body box-bg\"&gt;&lt;header class=\"text-end mb-1\"&gt;&lt;i class=\"topic-addBtn fa-solid fa-plus fs-5 i-btn rounded-circle \"&gt;&lt;/i&gt;&lt;/header&gt;&lt;div class=\"topic-list\"&gt;<span class=\"hljs-subst\">${topicHtml}</span>&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;`</span>\n      })\n      <span class=\"hljs-title function_\">html</span>(chapterAccordion,allChapterHtml)\n      <span class=\"hljs-keyword\">let</span> leftSideBar = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#offcanvas-leftSideBar'</span>)\n      <span class=\"hljs-keyword\">if</span>(leftSideBar.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'show'</span>)){\n        <span class=\"hljs-keyword\">let</span> x = bootstrap.<span class=\"hljs-property\">Offcanvas</span>.<span class=\"hljs-title function_\">getInstance</span>(leftSideBar) \n        x.<span class=\"hljs-title function_\">hide</span>()\n      }\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>,<span class=\"hljs-literal\">true</span>)            \n      <span class=\"hljs-title function_\">setAccordionItemAutoId</span>(chapterAccordion)\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">newTopicHandler</span>()\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">topicTriggerHandler</span>()         \n      }\n\n\n\n      <span class=\"hljs-title function_\">topicTriggerHandler</span>(<span class=\"hljs-params\"></span>){\n         <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>,<span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>)=&gt;</span>{\n            <span class=\"hljs-keyword\">if</span>(e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">'data-chapter'</span>)){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentChapter</span> = e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">'data-chapter'</span>)\n               <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#chapter-container .currentSubjectName'</span>,<span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.currentSubject.subject_name}</span> / <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.currentChapter}</span>`</span>)\n            }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">'data-topic'</span>)){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTopic</span> = e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">'data-topic'</span>)\n            }\n         })\n      }\n\n      <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">newTopicHandler</span>(<span class=\"hljs-params\"></span>){\n       <span class=\"hljs-keyword\">let</span> allChapterOfAccordion = <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions .accordion-item'</span>)\n       allChapterOfAccordion.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span>=&gt;</span>{\n       <span class=\"hljs-keyword\">let</span> newTopicAddBtn   = <span class=\"hljs-title function_\">get</span>(eachChapter,<span class=\"hljs-string\">'.accordion-collapse .topic-addBtn'</span>)\n       <span class=\"hljs-keyword\">let</span> chapterTopicList = <span class=\"hljs-title function_\">get</span>(eachChapter,<span class=\"hljs-string\">'.accordion-collapse .topic-list'</span>)\n       <span class=\"hljs-title function_\">trigger</span>(newTopicAddBtn,<span class=\"hljs-title function_\">async</span>()=&gt;{\n         <span class=\"hljs-keyword\">let</span> topicTitle = <span class=\"hljs-title function_\">prompt</span>(<span class=\"hljs-string\">'new topic title'</span>)\n         <span class=\"hljs-keyword\">if</span>(!topicTitle) <span class=\"hljs-keyword\">return</span> ;\n         <span class=\"hljs-keyword\">let</span> newTopic = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">'button'</span>)\n         newTopic.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'each-topic'</span>, <span class=\"hljs-string\">'btn'</span>, <span class=\"hljs-string\">'w-100'</span>,<span class=\"hljs-string\">'text-start'</span>,<span class=\"hljs-string\">'d-block'</span>,<span class=\"hljs-string\">'box-hover'</span>,<span class=\"hljs-string\">'rounded-1'</span>,<span class=\"hljs-string\">'text-truncate'</span>)\n         <span class=\"hljs-title function_\">attr</span>(newTopic,<span class=\"hljs-string\">'data-bs-toggle'</span>,<span class=\"hljs-string\">'modal'</span>)\n         <span class=\"hljs-title function_\">attr</span>(newTopic,<span class=\"hljs-string\">'data-bs-target'</span>,<span class=\"hljs-string\">'#modal-content'</span>)\n         <span class=\"hljs-title function_\">attr</span>(newTopic,<span class=\"hljs-string\">'data-topic'</span>,topicTitle)\n         <span class=\"hljs-title function_\">text</span>(newTopic,topicTitle)\n         chapterTopicList.<span class=\"hljs-title function_\">appendChild</span>(newTopic)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`creating new topic <span class=\"hljs-subst\">${topicTitle}</span> ‚è≥`</span>,<span class=\"hljs-literal\">false</span>)                              \n         <span class=\"hljs-keyword\">let</span> currentChapter = <span class=\"hljs-title function_\">get</span>(eachChapter,<span class=\"hljs-string\">'.accordion-button'</span>).<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">'data-chapter'</span>)         \n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">async</span> each_chapter=&gt;{\n            <span class=\"hljs-keyword\">if</span>(each_chapter.<span class=\"hljs-property\">chapter_name</span> === currentChapter){\n               <span class=\"hljs-keyword\">let</span> topicObj = {<span class=\"hljs-attr\">topic_name</span>:topicTitle,<span class=\"hljs-attr\">topic_html</span>:<span class=\"hljs-string\">''</span>}\n               each_chapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">push</span>(topicObj)\n               <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">updateSubject</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>,<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>)\n               <span class=\"hljs-keyword\">if</span>(result === <span class=\"hljs-literal\">true</span>){\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'new topic created'</span>,<span class=\"hljs-string\">'circle-check'</span>)\n               <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showChapter</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentSubject</span>.<span class=\"hljs-property\">subject_name</span>)\n               }<span class=\"hljs-keyword\">else</span>{\n                  <span class=\"hljs-title function_\">remove</span>(newTopic)\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'failed to create new topic'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed ‚ùå`</span>,<span class=\"hljs-literal\">false</span>)                                                \n               }\n            }<span class=\"hljs-comment\">//end chapter logic</span>\n         })<span class=\"hljs-comment\">//end chapter loop</span>\n       })<span class=\"hljs-comment\">//end trigger</span>\n       })<span class=\"hljs-comment\">//end chapter loop</span>\n      }\n<span class=\"hljs-comment\">// end function</span>\n\n\n   <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">newSubjectHandler</span>(<span class=\"hljs-params\"></span>){\n      <span class=\"hljs-title function_\">trigger</span>(<span class=\"hljs-string\">'#leftSideBar-subjectCreateBtn'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n         <span class=\"hljs-keyword\">const</span> subBtnContainer = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#leftsideBar-subject-list'</span>)\n         <span class=\"hljs-keyword\">let</span> newSubjectBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">'button'</span>)\n         newSubjectBtn.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'sidebar-subjectBtn'</span>,<span class=\"hljs-string\">'btn'</span>,<span class=\"hljs-string\">'w-100'</span>,<span class=\"hljs-string\">'text-start'</span>,<span class=\"hljs-string\">'box-hover'</span>,<span class=\"hljs-string\">'overflow-hidden'</span>, <span class=\"hljs-string\">'text-truncate'</span>)\n         newSubjectBtn.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">\"&lt;span class='subject-name'&gt;&lt;/span&gt;&lt;span class='d-none spinner-grow spinner-grow-sm' aria-hidden='true'&gt;&lt;/span&gt;\"</span>\n         subBtnContainer.<span class=\"hljs-title function_\">appendChild</span>(newSubjectBtn)\n         <span class=\"hljs-keyword\">let</span> allSubjectBtn  = <span class=\"hljs-title function_\">getAll</span>(subBtnContainer,<span class=\"hljs-string\">'.sidebar-subjectBtn'</span>)\n         <span class=\"hljs-keyword\">let</span> newSubjectSpan = <span class=\"hljs-title function_\">get</span>(allSubjectBtn[allSubjectBtn.<span class=\"hljs-property\">length</span> -<span class=\"hljs-number\">1</span>],<span class=\"hljs-string\">'span.subject-name'</span>)\n         <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">autoEdit</span>(newSubjectSpan,<span class=\"hljs-keyword\">async</span> (subject_name)=&gt;{\n            <span class=\"hljs-keyword\">if</span>(!subject_name){\n               <span class=\"hljs-title function_\">remove</span>(allSubjectBtn[allSubjectBtn.<span class=\"hljs-property\">length</span>-<span class=\"hljs-number\">1</span>])\n            }<span class=\"hljs-keyword\">else</span>{\n               subject_name = subject_name.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/[\\.,!#$%^'`\\/&amp;\\*\\[\\]|()+]/g</span>,<span class=\"hljs-string\">'-'</span>)\n               <span class=\"hljs-keyword\">let</span> lastSubjectBtn = allSubjectBtn[allSubjectBtn.<span class=\"hljs-property\">length</span>-<span class=\"hljs-number\">1</span>] \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`creating new subject <span class=\"hljs-subst\">${subject_name}</span>...`</span>,<span class=\"hljs-literal\">false</span>)                     \n                <span class=\"hljs-title function_\">attr</span>(lastSubjectBtn,<span class=\"hljs-string\">'disabled'</span>,<span class=\"hljs-string\">'true'</span>)\n                <span class=\"hljs-title function_\">get</span>(lastSubjectBtn,<span class=\"hljs-string\">'.spinner-grow'</span>).<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">'d-none'</span>)\n               <span class=\"hljs-keyword\">let</span> resultOfCreatingNewSubject = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">createSubject</span>(subject_name)\n               <span class=\"hljs-keyword\">if</span>(resultOfCreatingNewSubject === <span class=\"hljs-string\">'subject created'</span>){\n                  lastSubjectBtn.<span class=\"hljs-title function_\">removeAttribute</span>(<span class=\"hljs-string\">'disabled'</span>)\n                  lastSubjectBtn.<span class=\"hljs-title function_\">removeChild</span>(lastSubjectBtn.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">'.spinner-grow'</span>))\n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'new subject created'</span>,<span class=\"hljs-string\">'circle-check'</span>)               \n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>,<span class=\"hljs-literal\">false</span>)          \n                  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showSubjectList</span>()                \n               }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(resultOfCreatingNewSubject === <span class=\"hljs-string\">'subject already exists'</span>){\n                subBtnContainer.<span class=\"hljs-title function_\">removeChild</span>(allSubjectBtn[allSubjectBtn.<span class=\"hljs-property\">length</span>-<span class=\"hljs-number\">1</span>])\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'subject already exist'</span>,<span class=\"hljs-string\">'triangle-exclamation'</span>)\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>,<span class=\"hljs-literal\">false</span>)                          \n               }\n            }\n         })<span class=\"hljs-comment\">//end callbck func</span>\n      })\n   }\n\n  <span class=\"hljs-title function_\">autoEdit</span>(<span class=\"hljs-params\">element,callback</span>){\n\n   <span class=\"hljs-title function_\">attr</span>(element,<span class=\"hljs-string\">'contenteditable'</span>,<span class=\"hljs-string\">'true'</span>)\n   element.<span class=\"hljs-title function_\">focus</span>()\n\n   <span class=\"hljs-title class_\">Trigger</span>(element,<span class=\"hljs-string\">'blur'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n      element.<span class=\"hljs-title function_\">removeAttribute</span>(<span class=\"hljs-string\">'contenteditable'</span>)\n       <span class=\"hljs-title function_\">callback</span>(element.<span class=\"hljs-property\">innerText</span>)            \n   })\n\n   <span class=\"hljs-title class_\">Trigger</span>(element,<span class=\"hljs-string\">'keydown'</span>,<span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>)=&gt;</span>{\n   <span class=\"hljs-keyword\">if</span>(e.<span class=\"hljs-property\">key</span> == <span class=\"hljs-string\">'Enter'</span>){\n      element.<span class=\"hljs-title function_\">removeAttribute</span>(<span class=\"hljs-string\">'contenteditable'</span>)\n   }\n   })\n\n   }\n   <span class=\"hljs-comment\">// end function</span>\n\n   <span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-params\">msg,icon</span>){\n    <span class=\"hljs-keyword\">let</span> toast = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#liveToast'</span>)    \n    <span class=\"hljs-keyword\">if</span>(!msg) <span class=\"hljs-keyword\">return</span> ;\n    <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-title function_\">get</span>(toast,<span class=\"hljs-string\">'.toast-msg'</span>),msg)\n    <span class=\"hljs-keyword\">if</span>(icon){\n     <span class=\"hljs-keyword\">let</span> toastIcon = <span class=\"hljs-title function_\">get</span>(toast,<span class=\"hljs-string\">'.toast-icon'</span>)\n     toastIcon.<span class=\"hljs-property\">className</span> = <span class=\"hljs-string\">''</span>\n     toastIcon.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'fa-solid'</span>,<span class=\"hljs-string\">`fa-<span class=\"hljs-subst\">${icon}</span>`</span>,<span class=\"hljs-string\">'fs-5'</span>,<span class=\"hljs-string\">'me-2'</span>,<span class=\"hljs-string\">'toast-icon'</span>)      \n    }\n    <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#liveToastBtn'</span>).<span class=\"hljs-title function_\">click</span>()    \n   }\n   <span class=\"hljs-comment\">// end function</span>\n\n   <span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-params\">msg,autohide</span>){\n   <span class=\"hljs-keyword\">let</span> msg_text = msg ? msg : <span class=\"hljs-string\">' '</span> \n   <span class=\"hljs-keyword\">let</span> statusbar = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#statusBar'</span>)\n   <span class=\"hljs-title function_\">text</span>(statusbar,msg_text)\n   <span class=\"hljs-keyword\">if</span>(autohide===<span class=\"hljs-literal\">true</span>){\n     <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">()=&gt;</span><span class=\"hljs-title function_\">text</span>(statusbar,<span class=\"hljs-string\">''</span>),<span class=\"hljs-number\">1300</span>)\n   }\n   } <span class=\"hljs-comment\">//end function  </span>\n\n   <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">showUserDetails</span>(<span class=\"hljs-params\"></span>){\n      <span class=\"hljs-keyword\">let</span> userObj = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">getUserDetails</span>()\n      <span class=\"hljs-keyword\">let</span> user_img_src = userObj.<span class=\"hljs-property\">avatar_url</span> \n      <span class=\"hljs-keyword\">let</span> user_name = userObj.<span class=\"hljs-property\">login</span>\n      <span class=\"hljs-keyword\">if</span>(!(user_img_src &amp;&amp; user_name)) <span class=\"hljs-keyword\">return</span> ;\n      <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#nav-user-avatar'</span>).<span class=\"hljs-property\">src</span> = user_img_src\n   }      \n\n   <span class=\"hljs-title function_\">initContentCreating</span>(<span class=\"hljs-params\"></span>){\n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/handleEditMode.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">handleEditMode</span>()\n      })            \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/handleOtherLayout.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">handleOtherLayout</span>()\n      })               \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/shortcutEvent.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">shortcutHandler</span>()\n      })         \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/copyPasteDeleteHandler.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">initElCopyPasteDelete</span>()\n      })         \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/createNewElement.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">createNewElementHandler</span>()\n      })         \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/handleHighlight.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">handleHightlightMode</span>()\n      })         \n   <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./allModule/elementTargetHandler.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span>=&gt;</span>{\n         mod.<span class=\"hljs-title function_\">elTargetHandler</span>()\n      })            \n}\n<span class=\"hljs-comment\">// end function</span>\n\n}\n<span class=\"hljs-comment\">// end class</span>\n\n<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'DOMContentLoaded'</span>,<span class=\"hljs-function\">()=&gt;</span>{\n<span class=\"hljs-keyword\">const</span> username = <span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>,<span class=\"hljs-string\">'data-usernme'</span>)\n<span class=\"hljs-keyword\">const</span> token = <span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>,<span class=\"hljs-string\">'data-token'</span>)\n<span class=\"hljs-keyword\">if</span>(username === <span class=\"hljs-string\">'guest'</span>){\n   <span class=\"hljs-keyword\">return</span> ;\n}\n<span class=\"hljs-keyword\">let</span> note = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Note</span>(username,token)\n})\n\n\n      </code></pre></li> <li data-el=\"list\">This is list item5</li> <li data-el=\"list\">This is list item6</li></ul></div>"}]},{"chapter_name":"Array","topics":[{"topic_name":"array","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 px-md-2 pb-4 content-section\" data-el=\"section\"><h3 class=\"p-2 mb-2\" data-el=\"heading\">Introduction to php array</h3><h5 class=\"p-2 mb-2\" data-el=\"title\">Basic syntax</h5>\n      <div class=\"w-100 my-3\" data-el=\"clps-container\">\n        <button class=\"btn w-100 text-start collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#cc-5174\" aria-expanded=\"false\" aria-control=\"cc-5174\" data-el=\"collapse title\">\n            <span data-el=\"colps-title\" class=\"\">summary&nbsp;</span>\n            <i class=\"fa-solid fa-arrow-down ms-1\"></i>\n        </button>\n        <div class=\"m-1 collapse-content pb-2 collapse\" id=\"cc-5174\" data-el=\"colps-content\" style=\"\">\n        <div class=\"col-12 rounded-2 border content-section p-1\" data-el=\"section\"><script>\n         (function(){\n            let randomNumber = Math.round(Math.random()*10000)\n            let collapseContainer = get('.currentCollpaseContainer')\n            attr(get(collapseContainer,'button'),'data-bs-target',`#cc-${randomNumber}`)\n            attr(get(collapseContainer,'button'),'aria-control',`cc-${randomNumber}`)\n            attr(get(collapseContainer,'.collapse-content'),'id',`cc-${randomNumber}`)\n            collapseContainer.classList.remove('currentCollpaseContainer')\n         })()\n       </script><div class=\"copy-container my-2 p-2 bg-codelink border rounded-1 d-flex jc-between ai-center w-auto\" data-el=\"copy-container\">\n  <p class=\"copy-text flex-grow-1 text-truncate px-1 fnx-9\" data-el=\"copy-text\">https://chatgpt.com/share/f6c4a3bc-d2af-4c34-904c-2024499d575a</p>\n  <i class=\"copy-btn fa-solid fa-clone flex-shrink-0 c-pointer\"></i>\n</div><p class=\"p p-2 px-lg-3 mb-2\" data-el=\"text\">All the content are taken from thislink</p></div>\n        </div>\n</div>\n<div class=\"col-12\">\n                <div class=\"scroll py-3 scroll-both scroll-min scroll-on-hover\" data-el=\"table-container\">\n                <table class=\"table table-borderless mx-auto\" data-el=\"table\"><thead class=\"table-active table-border\"><tr><th scope=\"col\">head1</th><th scope=\"col\">head2</th><th scope=\"col\">head3</th><th scope=\"col\">head4</th><th scope=\"col\">head5</th></tr></thead><tbody><tr><th scope=\"row\">col1</th><td>col2</td><td>col3</td><td>col4</td><td>col5</td></tr><tr><th scope=\"row\">col1</th><td>col2</td><td>col3</td><td class=\"\">col4</td><td>col5</td></tr></tbody></table>        \n                </div>\n                </div><p class=\"p p-2 px-lg-3 mb-2\" data-el=\"text\">An array in programming is a data structure that can hold multiple values of the same type. These values are stored in contiguous memory locations and can be accessed using indices, which are typically zero-based (i.e., the first element is accessed with index 0). Arrays are useful for organizing and managing collections of data efficiently.</p>\n<p></p><pre class=\"copy-container code-container\" data-el=\"code-container\">      <p class=\"code-header p-2\">\n      <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">python</span>\n      <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i>\n      </p>\n      <code class=\"language-python code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\">arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]\n<span class=\"hljs-built_in\">print</span>(arr[<span class=\"hljs-number\">0</span>])  <span class=\"hljs-comment\"># Output: 1</span>\n      </code></pre><pre class=\"copy-container code-container\" data-el=\"code-container\">      <p class=\"code-header p-2\">\n      <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">java</span>\n      <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i>\n      </p>\n      <code class=\"language-java code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-type\">int</span>[] arr = {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>};\nSystem.out.println(arr[<span class=\"hljs-number\">0</span>]);  <span class=\"hljs-comment\">// Output: 1</span>\n      </code></pre><pre class=\"copy-container code-container\" data-el=\"code-container\">      <p class=\"code-header p-2\">\n      <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">cpp</span>\n      <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i>\n      </p>\n      <code class=\"language-cpp code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-type\">int</span> arr[] = {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>};\nstd::cout &lt;&lt; arr[<span class=\"hljs-number\">0</span>];  <span class=\"hljs-comment\">// Output: 1</span>\n      </code></pre></div>"}]}]}