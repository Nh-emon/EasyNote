{"subject_name":"vainala javascipt","chapters":[{"chapter_name":"variable in javascript","topics":[{"topic_name":"new topic","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 px-md-2 pb-4 content-section\" data-el=\"section\"><pre class=\"copy-container code-container\" data-el=\"code-container\"> <p class=\"code-header p-2\"> <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">show_chapter.js</span> <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i> </p> <code class=\"language-javascript code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">/** * Fetches and displays chapters and topics for a given subject. * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">object</span>} <span class=\"hljs-variable\">_this</span> - Reference to the current context. * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">string</span>} <span class=\"hljs-variable\">subject_name</span> - Name of the subject to display. * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">string</span>} <span class=\"hljs-variable\">target_chapter_name</span> - Optional. Name of the target chapter to highlight. * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">string</span>} <span class=\"hljs-variable\">target_topic_name</span> - Optional. Name of the target topic to highlight. * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">boolean</span>} Indicates success (true) or failure (false) of the operation. */</span> <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">show_chapter</span>(<span class=\"hljs-params\">_this, subject_name, target_chapter_name, target_topic_name</span>) { <span class=\"hljs-comment\">// Display loading indication</span> <span class=\"hljs-title function_\">addBottomLoading</span>(<span class=\"hljs-string\">'#nav'</span>); _this.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`..loading subject <span class=\"hljs-subst\">${subject_name}</span>`</span>, <span class=\"hljs-literal\">false</span>); <span class=\"hljs-comment\">// Retrieve subject data from repository</span> <span class=\"hljs-keyword\">let</span> subObj = <span class=\"hljs-keyword\">await</span> _this.<span class=\"hljs-property\">userRepo</span>.<span class=\"hljs-title function_\">getFile</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${subject_name}</span>.json`</span>, <span class=\"hljs-string\">'subjects'</span>); <span class=\"hljs-keyword\">let</span> subjectContent; <span class=\"hljs-keyword\">try</span> { <span class=\"hljs-comment\">// Parse and decode subject content</span> <span class=\"hljs-keyword\">let</span> decodedContent = <span class=\"hljs-title function_\">base64ToUtf8</span>(subObj.<span class=\"hljs-property\">content</span>); subjectContent = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(decodedContent); } <span class=\"hljs-keyword\">catch</span> (err) { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err); <span class=\"hljs-comment\">// Handle parsing error</span> <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions'</span>, <span class=\"hljs-string\">''</span>); <span class=\"hljs-title function_\">removeBottomLoading</span>(<span class=\"hljs-string\">'#nav'</span>); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>; } <span class=\"hljs-comment\">// Handle corrupt file or empty content</span> <span class=\"hljs-keyword\">if</span> (!subjectContent) { _this.<span class=\"hljs-title function_\">showToast</span>(<span class=\"hljs-string\">'corrupt file'</span>, <span class=\"hljs-string\">'triangle-exclamation'</span>); _this.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`failed`</span>, <span class=\"hljs-literal\">false</span>); <span class=\"hljs-title function_\">removeBottomLoading</span>(<span class=\"hljs-string\">'#nav'</span>); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>; } <span class=\"hljs-comment\">// Display subject name</span> <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#chapter-header-title'</span>, subject_name); _this.<span class=\"hljs-property\">current_subject</span> = subjectContent; <span class=\"hljs-comment\">// Handle case where no chapters are found</span> <span class=\"hljs-keyword\">if</span> (subjectContent.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>) { <span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>, <span class=\"hljs-string\">`&lt;h4 class='text-center text-light'&gt;create new subject here&lt;/h4&gt;`</span>); _this.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">`no chapter found`</span>, <span class=\"hljs-literal\">true</span>); <span class=\"hljs-title function_\">removeBottomLoading</span>(<span class=\"hljs-string\">'#nav'</span>); <span class=\"hljs-comment\">// Hide left sidebar if shown</span> <span class=\"hljs-keyword\">let</span> leftSideBar = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#offcanvas-leftSideBar'</span>); <span class=\"hljs-keyword\">if</span> (leftSideBar.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'show'</span>)) { <span class=\"hljs-keyword\">let</span> x = bootstrap.<span class=\"hljs-property\">Offcanvas</span>.<span class=\"hljs-title function_\">getInstance</span>(leftSideBar); x.<span class=\"hljs-title function_\">hide</span>(); } <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>; } <span class=\"hljs-keyword\">let</span> allChapterHtml = <span class=\"hljs-string\">''</span>; <span class=\"hljs-keyword\">let</span> chapterAccordion = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#chapter-container .chapter-accordions'</span>); <span class=\"hljs-comment\">// Iterate through each chapter</span> subjectContent.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachChapter</span> =&gt;</span> { <span class=\"hljs-keyword\">let</span> is_target_chapter = target_chapter_name &amp;&amp; target_chapter_name === eachChapter.<span class=\"hljs-property\">chapter_name</span> ? <span class=\"hljs-string\">'true'</span> : <span class=\"hljs-string\">'false'</span>; <span class=\"hljs-keyword\">let</span> total_topic = <span class=\"hljs-number\">0</span>; <span class=\"hljs-keyword\">let</span> total_topic_html = <span class=\"hljs-string\">''</span>; <span class=\"hljs-comment\">// Calculate total topics for the chapter</span> <span class=\"hljs-keyword\">if</span> (_this.<span class=\"hljs-property\">user_data</span>.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-property\">length</span> !== <span class=\"hljs-number\">0</span>) { _this.<span class=\"hljs-property\">user_data</span>.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachTopic</span> =&gt;</span> { <span class=\"hljs-keyword\">if</span> (eachTopic.<span class=\"hljs-property\">chapter</span> === eachChapter.<span class=\"hljs-property\">chapter_name</span>) { total_topic++; } }); } <span class=\"hljs-comment\">// Prepare total topics HTML</span> total_topic_html = total_topic === <span class=\"hljs-number\">0</span> ? <span class=\"hljs-string\">''</span> : <span class=\"hljs-string\">`&lt;span class='mx-2 flex-shrink-0 fnx-8 text-light'&gt;<span class=\"hljs-subst\">${total_topic}</span>&lt;/span&gt;`</span>; <span class=\"hljs-keyword\">let</span> chapterName = eachChapter.<span class=\"hljs-property\">chapter_name</span>; <span class=\"hljs-keyword\">let</span> topicHtml = <span class=\"hljs-string\">''</span>; <span class=\"hljs-comment\">// Iterate through each topic in the chapter</span> <span class=\"hljs-keyword\">if</span> (eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-property\">length</span> &gt;= <span class=\"hljs-number\">1</span>) { eachChapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">eachTopic</span> =&gt;</span> { <span class=\"hljs-keyword\">let</span> is_target_topic = target_topic_name &amp;&amp; target_topic_name === eachTopic.<span class=\"hljs-property\">topic_name</span> ? <span class=\"hljs-string\">'true'</span> : <span class=\"hljs-string\">'false'</span>; <span class=\"hljs-keyword\">let</span> last_visited_html = <span class=\"hljs-string\">''</span>; <span class=\"hljs-keyword\">let</span> last_visited_date; <span class=\"hljs-comment\">// Retrieve last visited date for the topic if available</span> <span class=\"hljs-keyword\">if</span> (_this.<span class=\"hljs-property\">user_data</span> &amp;&amp; _this.<span class=\"hljs-property\">user_data</span>.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-property\">length</span> !== <span class=\"hljs-number\">0</span>) { _this.<span class=\"hljs-property\">user_data</span>.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">topic</span> =&gt;</span> { <span class=\"hljs-keyword\">if</span> (topic.<span class=\"hljs-property\">id</span> === eachTopic.<span class=\"hljs-property\">topic_id</span>) { last_visited_date = topic.<span class=\"hljs-property\">last_visited</span>; } }); } <span class=\"hljs-comment\">// Prepare last visited HTML</span> last_visited_html = last_visited_date ? <span class=\"hljs-string\">`&lt;span class=\"flex-shrink-0 fnx-8 fw-400\"&gt;&lt;i class=\"fa-solid fa-clock-rotate-left me-1\"&gt;&lt;/i&gt;&lt;span&gt;<span class=\"hljs-subst\">${getTimeGap(last_visited_date)}</span>&lt;/span&gt;`</span> : <span class=\"hljs-string\">''</span>; <span class=\"hljs-comment\">// Prepare topic HTML</span> topicHtml += <span class=\"hljs-string\">`&lt;button class=\"each-topic btn w-100 text-start d-flex justify-content-between align-items-center box-hover rounded-1 text-truncate\" data-bs-toggle='modal' data-bs-target='#modal-content' data-is-target='<span class=\"hljs-subst\">${is_target_topic}</span>' data-topic='<span class=\"hljs-subst\">${eachTopic.topic_name}</span>'&gt;&lt;p class=\"flex-grow-1 topic-title\" data-topic='<span class=\"hljs-subst\">${eachTopic.topic_name}</span>'&gt;<span class=\"hljs-subst\">${eachTopic.topic_name}</span>&lt;/p&gt;<span class=\"hljs-subst\">${last_visited_html}</span>&lt;/button&gt;`</span>; }); } <span class=\"hljs-comment\">// Build HTML for each chapter and its topics</span> allChapterHtml += <span class=\"hljs-string\">`&lt;div class=\"accordion-item each-chapter\" data-is-target='<span class=\"hljs-subst\">${is_target_chapter}</span>' data-chapter='<span class=\"hljs-subst\">${chapterName}</span>'&gt;&lt;h2 class=\"accordion-header\"&gt;&lt;button class=\"accordion-button collapsed ps-1 d-flex justify-content-between align-items-center\" data-chapter='<span class=\"hljs-subst\">${chapterName}</span>' type=\"button\" data-bs-toggle=\"collapse\" aria-expanded=\"false\"&gt;&lt;p data-chapter='<span class=\"hljs-subst\">${chapterName}</span>' class=\"chapter-title text-truncate flex-grow-1\"&gt;<span class=\"hljs-subst\">${chapterName}</span>&lt;/p&gt;<span class=\"hljs-subst\">${total_topic_html}</span>&lt;/button&gt;&lt;/h2&gt;&lt;div class=\"accordion-collapse collapse\"&gt;&lt;div class=\"accordion-body box-bg\"&gt;&lt;header class=\"text-end mb-1\"&gt;&lt;i class=\"topic-addBtn fa-solid fa-plus fs-5 i-btn rounded-circle\"&gt;&lt;/i&gt;&lt;/header&gt;&lt;div class=\"topic-list\"&gt;<span class=\"hljs-subst\">${topicHtml}</span>&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;`</span>; }); <span class=\"hljs-comment\">// Render all chapters and topics HTML</span> <span class=\"hljs-title function_\">html</span>(chapterAccordion, allChapterHtml); <span class=\"hljs-comment\">// Hide left sidebar if shown</span> <span class=\"hljs-keyword\">let</span> leftSideBar = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#offcanvas-leftSideBar'</span>); <span class=\"hljs-keyword\">if</span> (leftSideBar.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'show'</span>)) { <span class=\"hljs-keyword\">let</span> x = bootstrap.<span class=\"hljs-property\">Offcanvas</span>.<span class=\"hljs-title function_\">getInstance</span>(leftSideBar); x.<span class=\"hljs-title function_\">hide</span>(); } <span class=\"hljs-comment\">// Clear loading indication and show success status</span> _this.<span class=\"hljs-title function_\">showStatus</span>(<span class=\"hljs-string\">``</span>, <span class=\"hljs-literal\">true</span>); <span class=\"hljs-title function_\">setAccordionItemAutoId</span>(<span class=\"hljs-string\">'.chapter-accordions'</span>); <span class=\"hljs-title function_\">removeBottomLoading</span>(<span class=\"hljs-string\">'#nav'</span>); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; } </code></pre></div>","topic_id":12}],"chapter_id":4},{"chapter_name":"regex","topics":[],"chapter_id":8},{"chapter_name":"class in javascript","topics":[{"topic_name":"class syntax in javascript","topic_html":"<ul class=\"ul li-disk ps-4 ps-md-5 py-3\" data-el=\"list-container\"><li data-el=\"list\" class=\"\">thisisline1<div class=\"accordion py-3 px-0\" data-el=\"accordion\" id=\"acr-169\"><div class=\"accordion-item\" id=\"acr-169-item1\"> <h2 class=\"accordion-header\"> <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" aria-expanded=\"false\" data-el=\"acr-title\" data-bs-target=\"#acr-169-item1-collapse\" aria-controls=\"acr-169-item1-collapse\">accordion1</button> </h2> <div class=\"accordion-collapse collapse\" id=\"acr-169-item1-collapse\" data-bs-parent=\"#acr-169\" style=\"\"> <div class=\"accordion-body py-4\" data-el=\"acr-content\"><span>content</span></div> </div> </div></div></li><li data-el=\"list\" class=\"\">thisisline2</li></ul>","topic_id":11}],"chapter_id":9},{"chapter_name":"test code 2","topics":[{"topic_name":"code","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 px-md-2 pb-4 content-section\" data-el=\"section\"><pre class=\"copy-container code-container\" data-el=\"code-container\">\n      <p class=\"code-header p-2\">\n      <span class=\"mx-1 text-truncate flex-grow-1\" data-el=\"code-title\">modal-content-handler.js</span>\n      <i class=\"fa-duotone fa-clone copy-btn flex-shrink-0\" title=\"copy code\"></i>\n      </p>\n      <code class=\"language-javascript code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">/**\n * Handles content updates and interactions for a modal. \n * This function sets up event handlers for:\n * - Showing the modal: Updates the modal content based on the current topic and chapter.\n * - Hiding the modal: Saves the updated content if new content was inserted.\n *\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Object</span>} <span class=\"hljs-variable\">_this</span> - The context object containing methods and properties for handling UI interactions.\n */</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">modal_content_handler</span>(<span class=\"hljs-params\">_this</span>) {\n    <span class=\"hljs-keyword\">const</span> modalContent = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#modal-content'</span>);\n    <span class=\"hljs-keyword\">const</span> modalElementContainer = <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'#element-content-container'</span>);\n\n    <span class=\"hljs-comment\">// Event handler for when the modal is shown</span>\n    <span class=\"hljs-title class_\">Trigger</span>(<span class=\"hljs-string\">'#modal-content'</span>, <span class=\"hljs-string\">'shown.bs.modal'</span>, <span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-title function_\">html</span>(modalElementContainer, <span class=\"hljs-string\">''</span>);                            \n        <span class=\"hljs-title function_\">attr</span>(modalElementContainer, <span class=\"hljs-string\">'data-has-new-content'</span>, <span class=\"hljs-string\">'false'</span>);\n        <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#modal-topic-title'</span>, _this.<span class=\"hljs-property\">current_topic</span>);\n        _this.<span class=\"hljs-title function_\">updatePageAddress</span>(_this.<span class=\"hljs-property\">current_topic</span>);\n\n        <span class=\"hljs-keyword\">const</span> chapter = _this.<span class=\"hljs-property\">current_subject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">find</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">ch</span> =&gt;</span> ch.<span class=\"hljs-property\">chapter_name</span> === _this.<span class=\"hljs-property\">current_chapter</span>);\n        <span class=\"hljs-keyword\">if</span> (chapter) {\n            <span class=\"hljs-keyword\">const</span> topic = chapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">find</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">tp</span> =&gt;</span> tp.<span class=\"hljs-property\">topic_name</span> === _this.<span class=\"hljs-property\">current_topic</span>);\n            <span class=\"hljs-keyword\">if</span> (topic &amp;&amp; topic.<span class=\"hljs-property\">topic_html</span>) {\n                <span class=\"hljs-title function_\">html</span>(modalElementContainer, topic.<span class=\"hljs-property\">topic_html</span>);\n                <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'.././allModule/elRequireJs.js'</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">mod</span> =&gt;</span> mod.<span class=\"hljs-title function_\">initRequireJs</span>());\n            }\n        }\n    });\n\n    <span class=\"hljs-comment\">// Event handler for when the modal is hidden</span>\n    <span class=\"hljs-title class_\">Trigger</span>(<span class=\"hljs-string\">'#modal-content'</span>, <span class=\"hljs-string\">'hidden.bs.modal'</span>,<span class=\"hljs-function\">() =&gt;</span> {\n        _this.<span class=\"hljs-title function_\">updatePageAddress</span>(_this.<span class=\"hljs-property\">current_subject</span>.<span class=\"hljs-property\">subject_name</span>);\n        <span class=\"hljs-keyword\">const</span> newContentInserted = <span class=\"hljs-title function_\">attr</span>(modalElementContainer, <span class=\"hljs-string\">'data-has-new-content'</span>) === <span class=\"hljs-string\">'true'</span>;\n        \n        <span class=\"hljs-keyword\">if</span> (!newContentInserted) <span class=\"hljs-keyword\">return</span>;\n\n        <span class=\"hljs-keyword\">const</span> currentContentHtml = <span class=\"hljs-title function_\">html</span>(modalElementContainer)\n        <span class=\"hljs-keyword\">const</span> chapter = _this.<span class=\"hljs-property\">current_subject</span>.<span class=\"hljs-property\">chapters</span>.<span class=\"hljs-title function_\">find</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">ch</span> =&gt;</span> ch.<span class=\"hljs-property\">chapter_name</span> === _this.<span class=\"hljs-property\">current_chapter</span>);\n        <span class=\"hljs-keyword\">if</span> (chapter) {\n            <span class=\"hljs-keyword\">const</span> topic = chapter.<span class=\"hljs-property\">topics</span>.<span class=\"hljs-title function_\">find</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">tp</span> =&gt;</span> tp.<span class=\"hljs-property\">topic_name</span> === _this.<span class=\"hljs-property\">current_topic</span>);\n            <span class=\"hljs-keyword\">if</span> (topic) {\n                topic.<span class=\"hljs-property\">topic_html</span> = currentContentHtml;\n                <span class=\"hljs-title function_\">html</span>(modalElementContainer, <span class=\"hljs-string\">''</span>);\n                <span class=\"hljs-title function_\">text</span>(<span class=\"hljs-string\">'#modal-topic-title'</span>, <span class=\"hljs-string\">''</span>);\n            }\n        }\n    });\n}\n\n      </code></pre></div>","topic_id":13}],"chapter_id":12}]}